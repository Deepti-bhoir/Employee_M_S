{"version":3,"sources":["services/EmployeeService.js","components/ListEmployeeComponent.jsx","components/HeaderComponent.jsx","components/FooterComponent.jsx","components/CreateEmployeeComponent.jsx","components/ViewEmployeeComponent.jsx","components/UpdateEmployeeComponent.jsx","App.js","reportWebVitals.js","index.js"],"names":["EMPLOYEE_API_BASE_URL","axios","get","employee","post","employeeId","put","delete","ListEmployeeComponent","props","state","employees","addEmployee","bind","editEmployee","deleteEmployee","id","EmployeeService","then","res","setState","filter","this","history","push","getEmployees","data","className","onClick","map","firstName","lastName","emailId","department","designation","projects","style","marginLeft","viewEmployee","Component","HeaderComponent","href","FooterComponent","CreateEmployeeComponent","saveOrUpdateEmployee","e","preventDefault","console","log","JSON","stringify","createEmployee","updateEmployee","changeFirstNameHandler","event","target","value","changeLastNameHandler","changeEmailIdHandler","changeDepartmentHandler","changeDesignationHandler","changeProjectsHandler","match","params","getEmployeeById","getTitle","placeholder","name","onChange","cancel","ViewEmployeeComponent","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.78b13206.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst EMPLOYEE_API_BASE_URL = \"http://localhost:8081/api/v1/employees\";\r\n\r\nclass EmployeeServices {\r\n\r\n    getEmployees(){\r\n        return axios.get(EMPLOYEE_API_BASE_URL);\r\n\r\n    }\r\n    createEmployee(employee){\r\n        return axios.post(EMPLOYEE_API_BASE_URL, employee);\r\n    }\r\n\r\n    getEmployeeById( employeeId){\r\n        return axios.get(EMPLOYEE_API_BASE_URL + '/' + employeeId);\r\n    }\r\n\r\n    updateEmployee(employee , employeeId){\r\n        return axios.put(EMPLOYEE_API_BASE_URL + '/' + employeeId, employee);\r\n    }\r\n\r\n    deleteEmployee(employeeId){\r\n        return axios.delete(EMPLOYEE_API_BASE_URL + '/' + employeeId);\r\n    }\r\n\r\n}\r\nexport default new EmployeeServices()","import React, { Component } from 'react'\r\nimport EmployeeService from '../services/EmployeeService'\r\n\r\nclass ListEmployeeComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n                employees: []\r\n        }\r\n        this.addEmployee = this.addEmployee.bind(this);\r\n        this.editEmployee = this.editEmployee.bind(this);\r\n        this.deleteEmployee = this.deleteEmployee.bind(this);\r\n    }\r\n\r\n    deleteEmployee(id){\r\n        EmployeeService.deleteEmployee(id).then( res => {\r\n            this.setState({employees: this.state.employees.filter(employee => employee.id !== id)});\r\n        });\r\n    }\r\n    viewEmployee(id){\r\n        this.props.history.push(`/view-employee/${id}`);\r\n    }\r\n    editEmployee(id){\r\n        this.props.history.push(`/add-employee/${id}`);\r\n    }\r\n\r\n    componentDidMount(){\r\n        EmployeeService.getEmployees().then((res) => {\r\n            this.setState({ employees: res.data});\r\n        });\r\n    }\r\n\r\n    addEmployee(){\r\n        this.props.history.push('/add-employee/_add');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                 <h2 className=\"text-center\">Employees List</h2>\r\n                 <div className = \"row\">\r\n                    <button className=\"btn btn-primary\" onClick={this.addEmployee}> Add Employee</button>\r\n                 </div>\r\n                 <br></br>\r\n                 <div className = \"row\">\r\n                        <table className = \"table table-striped table-bordered\">\r\n\r\n                            <thead>\r\n                                <tr>\r\n                                    <th> First Name</th>\r\n                                    <th> Last Name</th>\r\n                                    <th> Email Id</th>\r\n                                    <th> Department</th>\r\n                                    <th> Designation</th>\r\n                                    <th> Projects In Progress</th>\r\n                                    <th> Actions</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    this.state.employees.map(\r\n                                        employee => \r\n                                        <tr key = {employee.id}>\r\n                                             <td> {employee.firstName} </td>   \r\n                                             <td> {employee.lastName}</td>\r\n                                             <td> {employee.emailId}</td>\r\n                                             <td> {employee.department}</td>\r\n                                             <td> {employee.designation}</td>\r\n                                             <td> {employee.projects}</td>\r\n                                             <td>\r\n                                                 <button onClick={ () => this.editEmployee(employee.id)} className=\"btn btn-info\">Update </button>\r\n                                                 <button style={{marginLeft: \"10px\"}} onClick={ () => this.deleteEmployee(employee.id)} className=\"btn btn-danger\">Delete </button>\r\n                                                 <button style={{marginLeft: \"10px\"}} onClick={ () => this.viewEmployee(employee.id)} className=\"btn btn-info\">View </button>\r\n                                             </td>\r\n                                        </tr>\r\n                                    )\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n\r\n                 </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListEmployeeComponent\r\n","import React,{Component} from 'react'\r\n\r\nclass HeaderComponent extends Component{\r\nconstructor(props){\r\n    super(props)\r\n\r\n    this.state = {\r\n\r\n    }\r\n\r\n}\r\n\r\nrender(){\r\n    return(\r\n        <div>\r\n        <header>\r\n            <nav className=\"navbar-expand-expand-md navbar-dark bg-dark\">\r\n            <div><a href=\"Deepti_Employee-Management-System/employee\" className=\"navbar-brand\">Employee Management System</a>\r\n            </div>\r\n            </nav>\r\n        </header>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HeaderComponent","import React,{Component} from 'react'\r\n\r\nclass FooterComponent extends Component{\r\nconstructor(props){\r\n    super(props)\r\n\r\n    this.state = {\r\n\r\n    }\r\n\r\n}\r\n\r\nrender(){\r\n    return(\r\n        <div>\r\n            <footer className =\"footer\">\r\n                <span className=\"text=muted\">All Rights Reserved @Copyright</span>\r\n            </footer>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FooterComponent","import React, { Component } from 'react'\r\nimport EmployeeService from '../services/EmployeeService';\r\n\r\nclass CreateEmployeeComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            // step 2\r\n            id: this.props.match.params.id,\r\n            firstName: '',\r\n            lastName: '',\r\n            emailId: '',\r\n            department: '',\r\n            designation: '',\r\n            projects: ''\r\n\r\n        }\r\n        this.changeFirstNameHandler = this.changeFirstNameHandler.bind(this);\r\n        this.changeLastNameHandler = this.changeLastNameHandler.bind(this);\r\n        this.saveOrUpdateEmployee = this.saveOrUpdateEmployee.bind(this);\r\n    }\r\n\r\n    // step 3\r\n    componentDidMount(){\r\n\r\n        // step 4\r\n        if(this.state.id === '_add'){\r\n            return\r\n        }else{\r\n            EmployeeService.getEmployeeById(this.state.id).then( (res) =>{\r\n                let employee = res.data;\r\n                this.setState({firstName: employee.firstName,\r\n                    lastName: employee.lastName,\r\n                    emailId : employee.emailId,\r\n                    department: employee.department,\r\n                    designation: employee.designation,\r\n                    projects: employee.projects\r\n\r\n                });\r\n            });\r\n        }        \r\n    }\r\n    saveOrUpdateEmployee = (e) => {\r\n        e.preventDefault();\r\n        let employee = {firstName: this.state.firstName, lastName: this.state.lastName, emailId: this.state.emailId, department: this.state.department, designation:this.state.designation, projects:this.state.projects};\r\n        console.log('employee => ' + JSON.stringify(employee));\r\n\r\n        // step 5\r\n        if(this.state.id === '_add'){\r\n            EmployeeService.createEmployee(employee).then(res =>{\r\n                this.props.history.push('/employees');\r\n            });\r\n        }else{\r\n            EmployeeService.updateEmployee(employee, this.state.id).then( res => {\r\n                this.props.history.push('/employees');\r\n            });\r\n        }\r\n    }\r\n    \r\n    changeFirstNameHandler= (event) => {\r\n        this.setState({firstName: event.target.value});\r\n    }\r\n\r\n    changeLastNameHandler= (event) => {\r\n        this.setState({lastName: event.target.value});\r\n    }\r\n\r\n    changeEmailIdHandler= (event) => {\r\n        this.setState({emailId: event.target.value});\r\n    }\r\n\r\n    changeDepartmentHandler= (event) => {\r\n        this.setState({department: event.target.value});\r\n    }\r\n\r\n    changeDesignationHandler= (event) => {\r\n        this.setState({designation: event.target.value});\r\n    }\r\n\r\n    changeProjectsHandler= (event) => {\r\n        this.setState({projects: event.target.value});\r\n    }\r\n\r\n\r\n\r\n\r\n    cancel(){\r\n        this.props.history.push('/employess');\r\n    }\r\n\r\n    getTitle(){\r\n        if(this.state.id === '_add'){\r\n            return <h3 className=\"text-center\">Add Employee</h3>\r\n        }else{\r\n            return <h3 className=\"text-center\">Update Employee</h3>\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <br></br>\r\n                   <div className = \"container\">\r\n                        <div className = \"row\">\r\n                            <div className = \"card col-md-6 offset-md-3 offset-md-3\">\r\n                                {\r\n                                    this.getTitle()\r\n                                }\r\n                                <div className = \"card-body\">\r\n                                    <form>\r\n                                    <div className = \"form-group\">\r\n                                            <label> First Name: </label>\r\n                                            <input placeholder=\"First Name\" name=\"firstName\" className=\"form-control\" \r\n                                                value={this.state.firstName} onChange={this.changeFirstNameHandler}/>\r\n                                        </div>\r\n                                        <div className = \"form-group\">\r\n                                            <label> Last Name: </label>\r\n                                            <input placeholder=\"Last Name\" name=\"lastName\" className=\"form-control\" \r\n                                                value={this.state.lastName} onChange={this.changeLastNameHandler}/>\r\n                                        </div>\r\n                                        <div className = \"form-group\">\r\n                                            <label> Email Id: </label>\r\n                                            <input placeholder=\"Email Id\" name=\"emailId\" className=\"form-control\" \r\n                                                value={this.state.emailId} onChange={this.changeEmailIdHandler}/>\r\n                                        </div>\r\n                                        <div className = \"form-group\">\r\n                                            <label> Department: </label>\r\n                                            <input placeholder=\"Department\" name=\"department\" className=\"form-control\" \r\n                                                value={this.state.department} onChange={this.changeDepartmentHandler}/>\r\n                                        </div>\r\n                                        <div className = \"form-group\">\r\n                                            <label> Designation: </label>\r\n                                            <input placeholder=\"Designation\" name=\"designation\" className=\"form-control\" \r\n                                                value={this.state.designation} onChange={this.changeDesignationHandler}/>\r\n                                        </div>\r\n                                        <div className = \"form-group\">\r\n                                            <label> Projects In Progress: </label>\r\n                                            <input placeholder=\"Projects\" name=\"projects\" className=\"form-control\" \r\n                                                value={this.state.projects} onChange={this.changeProjectsHandler}/>\r\n                                        </div>\r\n\r\n\r\n                                        <button className=\"btn btn-success\" onClick={this.saveOrUpdateEmployee}>Save</button>\r\n                                        <button className=\"btn btn-danger\" onClick={this.cancel.bind(this)} style={{marginLeft: \"10px\"}}>Cancel</button>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                   </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CreateEmployeeComponent\r\n","import React, { Component } from 'react'\r\nimport EmployeeService from '../services/EmployeeService'\r\n\r\nclass ViewEmployeeComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            employee: {}\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        EmployeeService.getEmployeeById(this.state.id).then( res => {\r\n            this.setState({employee: res.data});\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <br></br>\r\n                <div className = \"card col-md-6 offset-md-3\">\r\n                    <h3 className = \"text-center\"> View Employee Details</h3>\r\n                    <div className = \"card-body\">\r\n                    <div className = \"row\">\r\n                            <label>  First Name: </label>\r\n                            <div> { this.state.employee.firstName }</div>\r\n                        </div>\r\n                        <div className = \"row\">\r\n                            <label>  Last Name: </label>\r\n                            <div> { this.state.employee.lastName }</div>\r\n                        </div>\r\n                        <div className = \"row\">\r\n                            <label>  Email ID: </label>\r\n                            <div> { this.state.employee.emailId }</div>\r\n                        </div>\r\n                        <div className = \"row\">\r\n                            <label> Department: </label>\r\n                            <div>{this.state.employee.department}</div>\r\n                        </div>\r\n                        <div className = \"row\">\r\n                            <label>  Designation: </label>\r\n                            <div> { this.state.employee.designation }</div>\r\n                        </div>\r\n                        <div className = \"row\">\r\n                            <label>  Projects: </label>\r\n                            <div> { this.state.employee.projects }</div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                \r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default ViewEmployeeComponent\r\n","import React, { Component } from 'react'\r\nimport EmployeeService from '../services/EmployeeService';\r\n\r\nclass UpdateEmployeeComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            firstName: '',\r\n            lastName: '',\r\n            emailId: '',\r\n            department: '',\r\n            designation:'',\r\n            projects:''\r\n\r\n        }\r\n        this.changeFirstNameHandler = this.changeFirstNameHandler.bind(this);\r\n        this.changeLastNameHandler = this.changeLastNameHandler.bind(this);\r\n        this.saveOrUpdateEmployee = this.saveOrUpdateEmployee.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        EmployeeService.getEmployeeById(this.state.id).then( (res) =>{\r\n            let employee = res.data;\r\n            this.setState({firstName: employee.firstName,\r\n                lastName: employee.lastName,\r\n                emailId : employee.emailId,\r\n                department : employee.department,\r\n                designation : employee.designation,\r\n                projects : employee.projects\r\n            });\r\n        });\r\n    }\r\n\r\n    updateEmployee = (e) => {\r\n        e.preventDefault();\r\n        let employee = {firstName: this.state.firstName, lastName: this.state.lastName, emailId: this.state.emailId, department: this.state.department, designation:this.state.designation, projects:this.state.projects};\r\n        console.log('employee => ' + JSON.stringify(employee));\r\n        console.log('id => ' + JSON.stringify(this.state.id));\r\n        EmployeeService.updateEmployee(employee, this.state.id).then( res => {\r\n            this.props.history.push('/employees');\r\n        });\r\n    }\r\n    \r\n    changeFirstNameHandler= (event) => {\r\n        this.setState({firstName: event.target.value});\r\n    }\r\n\r\n    changeLastNameHandler= (event) => {\r\n        this.setState({lastName: event.target.value});\r\n    }\r\n\r\n    changeEmailIdHandler= (event) => {\r\n        this.setState({emailId: event.target.value});\r\n    }\r\n\r\n    changeDepartmentHandler= (event) => {\r\n        this.setState({department: event.target.value});\r\n    }\r\n\r\n    changeDesignationHandler= (event) => {\r\n        this.setState({designation: event.target.value});\r\n    }\r\n\r\n    changeProjectsHandler= (event) => {\r\n        this.setState({projects: event.target.value});\r\n    }\r\n\r\n    cancel(){\r\n        this.props.history.push('/employees');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <br></br>\r\n                   <div className = \"container\">\r\n                        <div className = \"row\">\r\n                            <div className = \"card col-md-6 offset-md-3 offset-md-3\">\r\n                                <h3 className=\"text-center\">Update Employee</h3>\r\n                                <div className = \"card-body\">\r\n                                    <form>\r\n                                    <div className = \"form-group\">\r\n                                            <label> First Name: </label>\r\n                                            <input placeholder=\"First Name\" name=\"firstName\" className=\"form-control\" \r\n                                                value={this.state.firstName} onChange={this.changeFirstNameHandler}/>\r\n                                        </div>\r\n                                        <div className = \"form-group\">\r\n                                            <label> Last Name: </label>\r\n                                            <input placeholder=\"Last Name\" name=\"lastName\" className=\"form-control\" \r\n                                                value={this.state.lastName} onChange={this.changeLastNameHandler}/>\r\n                                        </div>\r\n                                        <div className = \"form-group\">\r\n                                            <label> Email Id: </label>\r\n                                            <input placeholder=\"Email Id\" name=\"emailId\" className=\"form-control\" \r\n                                                value={this.state.emailId} onChange={this.changeEmailIdHandler}/>\r\n                                        </div>\r\n                                        <div className = \"form-group\">\r\n                                            <label> Department: </label>\r\n                                            <input placeholder=\"Department\" name=\"department\" className=\"form-control\" \r\n                                                value={this.state.department} onChange={this.changeDepartmentHandler}/>\r\n                                        </div>\r\n                                        <div className = \"form-group\">\r\n                                            <label> Designation: </label>\r\n                                            <input placeholder=\"Designation\" name=\"designation\" className=\"form-control\" \r\n                                                value={this.state.designation} onChange={this.changeDesignationHandler}/>\r\n                                        </div>\r\n                                        <div className = \"form-group\">\r\n                                            <label> Projects In Progress: </label>\r\n                                            <input placeholder=\"Projects\" name=\"projects\" className=\"form-control\" \r\n                                                value={this.state.projects} onChange={this.changeProjectsHandler}/>\r\n                                        </div>\r\n\r\n                                        <button className=\"btn btn-success\" onClick={this.updateEmployee}>Save</button>\r\n                                        <button className=\"btn btn-danger\" onClick={this.cancel.bind(this)} style={{marginLeft: \"10px\"}}>Cancel</button>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                   </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UpdateEmployeeComponent\r\n","import React from 'react';\n\nimport './App.css';\nimport {HashRouter as Router,Route,Switch}from 'react-router-dom';\nimport ListEmployeeComponent from \"./components/ListEmployeeComponent\";\nimport HeaderComponent from './components/HeaderComponent';\nimport FooterComponent from './components/FooterComponent';\nimport CreateEmployeeComponent from './components/CreateEmployeeComponent';\nimport UpdateEmployeeComponent from './components/UpdateEmployeeComponent';\nimport ViewEmployeeComponent from './components/ViewEmployeeComponent';\n\n\nfunction App() {\n  return (\n    \n    <div>\n      \n      <Router>  \n           <HeaderComponent/>\n           <div className=\"container\">\n            \n            <Switch> \n          <Route path = \"/\" exact component = {ListEmployeeComponent}></Route>\n          <Route path = \"/employees\" component = {ListEmployeeComponent}></Route>\n          <Route path = \"/add-employee/:id\" component = {CreateEmployeeComponent}></Route>\n          <Route path = \"/view-employee/:id\" component = {ViewEmployeeComponent}></Route> \n          {/*<Route path = \"/update-employee/:id\" component = {UpdateEmployeeComponent}></Route> */} \n           </Switch>\n      </div>\n    <FooterComponent/>\n       \n    </Router>\n    </div>\n   \n    \n  );\n}\n\nexport default App;\n  ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}